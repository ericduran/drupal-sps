<?php
/**
 * @file The Interactive Information Bar module provides an area at the top of rendered
 * entities for other modules to use to display admin information regarding
 * that entity.
 */

/**
 * Get the items to place into the IIB.
 *
 * To add items to this list a module should implement
 * hook_iib_data($entity) and return a render array
 * Note that this will only be called if the entity type and view mode are allowed.
 *
 * @see iib.api.php
 */
function iib_get_data() {
  if (iib_should_show_view()) {
    $items = array();
    module_invoke_all('iib_item_view', $items);
    return $items;
  }
}

/**
 * Implements hook_iib_item_view().
 *
 * Add anything added by calling iib_set_data().
 */
function iib_iib_item_view(&$items) {
  $set_items = &drupal_static('iib_set_items', array());
  if (!empty($set_items)) {
    $items += $set_items;
  }
  drupal_static_reset('iib_set_items');
}


/**
 * Allows other modules to add items to the IIB.
 *
 * Calling this function and passing a renderable element will result
 * in that element getting appended to the Interactive Information Bar.
 *
 * @param $renderable
 *  A renderable element (a render array) to be added to the IIB.
 *
 * @see iib.api.php
 */
function iib_set_item($renderable) {
  $items = &drupal_static('iib_set_items', array());
  $items[] = $renderable;
}

/**
 * Check our configuration to see if we should show the iib for this
 * entity.
 *
 * @return
 *  A boolean representing whether or not the iib should be shown
 */
function iib_should_show_view() {
  return user_access('view interactive information bar');
}

/**
 * Implements hook_permission().
 *
 * Add a permission for viewing the interactive information bar
 */
function iib_permission() {
  return array(
    'view interactive information bar' => array(
      'title' => t('View Interactive Information Bar'),
      'description' => t('Allow users to view the IIB.  This may allow users to perform administrative tasks.'),
    ),
  );
}