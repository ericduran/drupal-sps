<?php
class SPSPreviewFormWebTest extends SPSBaseWebTest {
  static function getInfo() {
    return array(
      'name' => 'SPS Preview Form Web Tests',
      'description' => 'Test the preview form fetching and submission for Conditions.  MUST BE RUN FROM WEB INTERFACE.',
      'group' => 'SPSPostTests',
    );
  }
  /**
   * This must be run from admin/config/development/testing to work properly.
   * That is to say, it won't work from the command line - durpalPost doesn't work right.
   */
  public function testPreviewFormWorkflow() {
    $manager = self::getManager();
    $form = $manager->getPreviewForm();
    $this->assertTrue(!empty($form['widget']), 'The manager should return the form from the condition using drupal_get_form');

    $values = array(
      'widget[preview_time]' => '00:00:00',
      'widget[preview_date][month]' => '7',
      'widget[preview_date][year]' => '2012',
      'widget[preview_date][day]' => '12',
    );

    $this->drupalPost('test_sps', $values, t('Preview'));
    $this->assertNoText(t('Invalid Date/Time given.'), 'The preview form should be accept good dates during validation.');

    $values = array(
      'widget[preview_time]' => 'lol',
      'widget[preview_date][month]' => '12',
      'widget[preview_date][year]' => '2012',
      'widget[preview_date][day]' => '3',
    );

    $this->drupalPost('test_sps', $values, t('Preview'));
    $this->assertText(t('Invalid Date/Time given.'),
      'The preview form should be reject bad dates during validation and fail with message "Invalid Date/Time given.".');
  }

  protected static function getManager() {
    $plugins = array(
      'override' => array(
        'test1' => array(
          'name' => 'test1',
          'condition' => 'BasicCondition',
          'class' => '\Drupal\sps\Test\Override',
          'instance_settings' => array(
            'type' => 'node',
          ),
        ),
        'test2' => array(
          'name' => 'test2',
          'condition' => 'BasicCondition',
          'class' => '\Drupal\sps\Test\Override',
          'instance_settings' => array(
            'type' => 'box',
          ),
        ),
        'test3' => array(
          'name' => 'test3',
          'condition' => 'client',
          'class' => '\Drupal\sps\Test\Override',
          'instance_settings' => array(),
        ),
      ),
      'condition' => array(
        'basic' => array(
          'name' => 'basic',
          'class' => '\Drupal\sps\Plugins\Condition\BasicCondition',
          'instance_settings' => array(
            'widget' => 'basicWidget',
            'name' => 'basic',
          ),
        ),
      ),
      'widget' => array(
        'basicWidget' => array(
          'name' => 'basicWidget',
          'class' => '\Drupal\sps\Test\Widget',
          'instance_settings' => array(),
        ),
      )
    );

    $state_controller = new Drupal\sps\Test\StorageController();
    $override_controller = new Drupal\sps\Test\StorageController();

    $config_controller = new Drupal\sps\Test\StorageController();
    $config_controller->set(SPS_CONFIG_ROOT_CONDITION, array('name' => 'basic'));

    $plugin_controller = new Drupal\sps\Test\PluginController($plugins);
    $hook_controller = new Drupal\sps\DrupalHookController();

    return new Drupal\sps\Manager($state_controller, $override_controller, $config_controller, $plugin_controller, $hook_controller);
  }
}
