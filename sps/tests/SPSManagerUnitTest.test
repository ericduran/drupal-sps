<?php
class SPSManagerUnitTest extends SPSBaseUnitTest {
  static function getInfo() {
    return array(
      'name' => 'SPS Manager Unit Tests',
      'description' => 'Test the public interface to the Manager object',
      'group' => 'SPS',
    );
  }

  public function testTestStorageController() {
    $control = new Drupal\sps\Test\StorageController();
    $obj = new stdClass();
    $obj->param = "PARAM";
    $control->set("test", $obj);
    $this->assertTrue($control->is_set("test"), "Test StorageController is_set is True when a name has been set"); 
    $this->assertFalse($control->is_set("not set"), "Test StorageController is_set is False when a name has been set"); 
    $this->assertEqual($control->get("test"), $obj, "Test StorageController's set and get should set and retrieve the same obj.", "SPS");
  }
  public function testManager_getNullSiteState() {
    $site_state_controller = new Drupal\sps\Test\StorageController();
    $override_controller = new Drupal\sps\Test\StorageController();
    $config_controller = new Drupal\sps\Test\StorageController();
    $manager = new Drupal\sps\Manager($site_state_controller, $override_controller, $config_controller);
    $this->assertNull($manager->getSiteState(), "Manager::getSiteState should return null if there is no state", "SPS");
  }
  public function testManager_getPersistentSiteState() {
    $site_state_controller = new Drupal\sps\Test\StorageController();
    $override_controller = new Drupal\sps\Test\StorageController();
    $config_controller = new Drupal\sps\Test\StorageController();
    $manager = new Drupal\sps\Manager($site_state_controller, $override_controller, $config_controller);

    $table = array(array("id"=> 1, "revision_id" => 2, "type"=>"bob"));
    $override = new Drupal\sps\Test\Override($table);
    $site_state = new Drupal\sps\SiteState($override_controller, $override);

    $site_state_controller->set($manager->getControllerKey(), $site_state);
    $this->assertEqual($manager->getSiteState(), $site_state, "Manager::getSiteState returns a site_state storred in the persistent data", "SPS");
  }
  public function testManager_setSiteState() {
    $site_state_controller = new Drupal\sps\Test\StorageController();
    $override_controller = new Drupal\sps\Test\StorageController();
    $config_controller = new Drupal\sps\Test\StorageController();
    $manager = new Drupal\sps\Manager($site_state_controller, $override_controller, $config_controller);

    $table = array(array("id"=> 1, "revision_id" => 2, "type"=>"bob"));
    $override = new Drupal\sps\Test\Override($table);
    $manager->setSiteState($override);

    $site_state = new Drupal\sps\SiteState($override_controller, $override);
    $this->assertEqual($site_state_controller->get($manager->getControllerKey()), $site_state, "Manager::setSiteState construct the site_state and put it in site_state_controller", "SPS");

  }
}
