<?php

class SPSCToolsObjectCacheWebTest extends SPSBaseWebTest {
  static function getInfo() {
    return array(
      'name' => 'SPS CToolsObjectCache Web Tests',
      'description' => 'Test the public interface of CToolsObjectCache objects',
      'group' => 'SPSInteractive',
    );
  }

  public function testCToolsObjectCache_exists() {
    $control = new \Drupal\sps\StorageController\CToolsObjectCache('test1');

    $obj = new stdClass();
    $obj->param = "test";
    $this->assertFalse($control->exists(), "::exists is False before being set"); 
    $control->set($obj);
    $this->assertTrue($control->exists(), "::exists is True after a ::set is run"); 
    $this->assertEqual($control->get(), $obj, '::get retrives what is set in ::set');
    $control->clear();
    $this->assertFalse($control->exists(), "::exists is False after running clear"); 
 
    $control->set($obj);

    $account = $this->drupalCreateUser(array());
    $this->drupalLogin($account);
    /*
    $rtn = '$c = new \Drupal\sps\StorageController\CToolsObjectCache("test");$c->set("TESTSTRING");return "iset";';
    //$rtn = "return 'John';";
    sps_test_call_set('SPSCToolsObjectCacheWebTestSet', $rtn);
    $rtn = '$c = new \Drupal\sps\StorageController\CToolsObjectCache("test"); return $c->exists() ? "SiteController is Set" : "Fail";';
    $rtn = '$c = new \Drupal\sps\StorageController\CToolsObjectCache("test"); return $c->get();';
    //$rtn = "return 'SiteController is Set';";
    sps_test_call_set('SPSCToolsObjectCacheWebTestGet', $rtn);

    $this->drupalGet("sps_test_call/SPSCToolsObjectCacheWebTestSet");
    $this->drupalGet("sps_test_call/SPSCToolsObjectCacheWebTestGet");
    $this->assertText("SiteController is Set");
    */
  }


}
